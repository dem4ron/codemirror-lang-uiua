# Logical

true
false
maybe

==>

Program(Logical, Logical, Logical)

# Integer

1
0123456789
2e3
4e-523
71e+1

==>

Program(Integer, Integer, Integer, Integer, Integer)

# Floating

1.0
0.123456789

==>

Program(Floating, Floating)

# Version

1.0.0
23.101.19000-beta1
7.8.9-rc1+build3
7.8.9.2.3

==>

Program(Version, Version, Version, Version)

# Null

null

==>

Program(null)

# Type

:integer

==>

Program(Type)

# Literal

'foo
'++

==>

Program(Literal(Word),Literal(Symbol))

# Color

#red
#0077BB

==>

Program(Color, Color)

# Char

'a'
'9'
'\t'

==>

Program(Char, Char, Char)

# String

"this is a quoted string"
"this\tis a quoted\nstring\"with escapes"
Â« This is smart-quoted string
{
    this is yet
    another
    very
    long string
    that spans more
    than
    one
    line
}
{:
  this is yet
    another
    very
  long string
  that spans more
      than
          one
          line
:}
------
this
is
using
dash
notation

==>

Program(String, String(Escape, Escape, Escape), String, String, String, String)

# Regex

{/[A-Z]/}
{/[A-Z]/i}

==>

Program(Regex, Regex)

# Word

one
Two_Three
happy?

==>

Program(Word, Word, Word)

# Inline

(1)
(true false)

==>

Program(Inline(Integer), Inline(Logical,Logical))

# Block

[1]
[true false]
["hello" ["there"]]

==>

Program(Block(Integer), Block(Logical,Logical), Block(String, Block(String)))

# Dictionary

#[
     name: "John"
     surname: "Doe"
     age: 34
]

==>

Program(Dictionary(KeyValuePair(Key,Value(String)),KeyValuePair(Key,Value(String)),KeyValuePair(Key,Value(Integer))))

# Function

function [x y][x + y]

==>

Program(Function(Parameters(Parameter(Word),Parameter(Word)),Block(Word,Symbol,Word)))

# Expressions

x + y
x - y
x / y
x * y

==>

Program(Word,Symbol,Word,Word,Symbol,Word,Word,Symbol,Word,Word,Symbol,Word)
